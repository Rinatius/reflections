How did viewing a diff between two versions of a file help you see the bug that was introduced?

Since the bug appeared after the changes had been made, it was clear that the bug was somewhere in the changed code.
Therefore it was much easier to find the bug looking on the changes and not entire code.


How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

I will be able to monitor my progress as a programmer and I will also have easier access to libraries that can be used between different projects.


What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

Only manual commit creation allows you to organize new changes logically.


Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Because some systems are oriented towards coding and some are not.


How can you use the commands git log and git diff to view the history of files?

git log shows all the commits for the repository. git diff show the difference between two commits.


How might using version control make you more confident to make changes that could break something?

Using version control I am sure that if any changes break anything I will always be able to revert.


Now that you have your workspace set up, what do you want to try using Git for?

For Android development.